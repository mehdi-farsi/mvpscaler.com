<%# locals: field_key, template:, landing: %>
<%
  meta        = (template.fields[field_key] || {}).stringify_keys
  type        = meta["type"].to_s.presence || "text"
  rows        = (meta["rows"].presence || 3).to_i
  choices     = Array(meta["choices"])
  placeholder = meta["placeholder"]

  bucket, *rest = field_key.split(".")
  current = landing.settings.dig(bucket, *rest)
  current = LandingTemplate.defaults_for(landing.template_key).dig(bucket, *rest) if current.nil?

  base_text = "w-full rounded-md border border-gray-300 bg-white px-2.5 py-2 text-sm text-gray-900 placeholder-gray-400
               focus:outline-none focus:ring-2 focus:ring-emerald-500/40 focus:border-emerald-500"
  base_sel  = "w-full rounded-md border border-gray-300 bg-white px-2.5 py-2 text-sm text-gray-900
               focus:outline-none focus:ring-2 focus:ring-emerald-500/40 focus:border-emerald-500"
%>

<%# TEXT / LONGTEXT / NUMBER / URL %>
<% if %w[text longtext number url].include?(type) %>
  <% if type == "longtext" %>
    <textarea name="settings_flat[<%= field_key %>]"
              rows="<%= rows %>"
              placeholder="<%= placeholder %>"
              class="<%= base_text %> resize-y min-h-[84px]"><%= current.to_s %></textarea>
  <% else %>
    <input type="<%= type == 'number' ? 'number' : (type == 'url' ? 'url' : 'text') %>"
           name="settings_flat[<%= field_key %>]"
           value="<%= current.to_s %>"
           placeholder="<%= placeholder %>"
           class="<%= base_text %>">
  <% end %>

<%# SELECT (explicit or inferred by choices) %>
<% elsif type == "select" || (choices.any? && type != "image_asset") %>
  <select name="settings_flat[<%= field_key %>]" class="<%= base_sel %>">
    <option value=""></option>
    <% choices.each do |opt| %>
      <% text, value = opt.is_a?(Array) ? opt : [opt, opt] %>
      <option value="<%= value %>" <%= "selected" if current.to_s == value.to_s %>><%= text %></option>
    <% end %>
  </select>

<%# COLOR %>
<% elsif type == "color" %>
  <div class="flex items-center gap-2">
    <input type="color"
           value="<%= current.to_s.presence || '#ffffff' %>"
           class="h-8 w-10 cursor-pointer rounded-md border border-gray-300"
           oninput="this.nextElementSibling.value=this.value; this.nextElementSibling.dispatchEvent(new Event('input'))">
    <input type="text"
           name="settings_flat[<%= field_key %>]"
           value="<%= current.to_s %>"
           placeholder="<%= placeholder.presence || '#RRGGBB' %>"
           class="<%= base_text %>">
  </div>

<%# BOOLEAN / TOGGLE %>
<% elsif %w[boolean toggle].include?(type) %>
  <% checked = ActiveModel::Type::Boolean.new.cast(current) %>
  <label class="inline-flex items-center gap-2 cursor-pointer select-none">
    <input type="hidden" name="settings_flat[<%= field_key %>]" value="0">
    <input type="checkbox"
           name="settings_flat[<%= field_key %>]"
           value="1"
           <%= "checked" if checked %>
           class="peer sr-only">
    <span class="h-5 w-9 rounded-full bg-gray-300 ring-1 ring-inset ring-gray-200 relative transition
                 after:content-[''] after:absolute after:top-0.5 after:left-0.5 after:h-4 after:w-4 after:rounded-full after:bg-white after:shadow after:transition
                 peer-checked:bg-emerald-600 peer-checked:after:translate-x-4"></span>
    <span class="text-sm text-gray-700">Enabled</span>
  </label>

<%# IMAGE ASSET (compact) %>
<% elsif type == "image_asset" %>
  <% url_map     = (choices.presence || []).index_with { |fn| image_path(fn) } rescue {} %>
  <% preview_url = landing.asset_url_for(field_key).presence || "" %>

  <div data-controller="landing-editor"
       data-landing-editor-url-map-value="<%= url_map.to_json %>"
       class="flex items-center gap-3">
    <div class="h-[44px] w-[80px] rounded-md border border-gray-200 overflow-hidden bg-gray-50">
      <img data-landing-editor-target="imagePreview"
           src="<%= preview_url %>"
           alt="<%= current.presence || 'no image' %>"
           class="w-full h-full object-cover"
           onerror="this.src=''; this.alt='no image'; this.classList.add('opacity-40')">
    </div>

    <div class="flex-1 grid grid-cols-2 gap-2">
      <% if choices.any? %>
        <select name="settings_flat[<%= field_key %>]"
                data-landing-editor-target="imageInput"
                data-action="input->landing-editor#updateImage change->landing-editor#updateImage"
                class="<%= base_sel %>">
          <option value=""></option>
          <% choices.each do |fn| %>
            <option value="<%= fn %>" <%= "selected" if current.to_s == fn %>><%= fn %></option>
          <% end %>
        </select>
      <% else %>
        <input type="text"
               name="settings_flat[<%= field_key %>]"
               value="<%= current.to_s %>"
               placeholder="<%= placeholder.presence || 'hero-bg.webp or URL' %>"
               data-landing-editor-target="imageInput"
               data-action="input->landing-editor#updateImage change->landing-editor#updateImage"
               class="<%= base_text %>">
      <% end %>

      <div class="flex items-center justify-end">
        <button type="button"
                data-action="landing-editor#pickFile"
                class="inline-flex items-center gap-1.5 rounded-md border border-gray-300 bg-white px-2.5 py-1.5 text-sm text-gray-700 hover:bg-emerald-50 hover:text-emerald-700">
          <i class="bi bi-upload"></i> Upload
        </button>
        <input type="file"
               accept="image/*"
               name="uploads[<%= field_key %>]"
               data-landing-editor-target="fileInput"
               data-action="change->landing-editor#fileChosen"
               class="hidden">
      </div>
    </div>
  </div>

<%# DEFAULT â†’ text %>
<% else %>
  <input type="text"
         name="settings_flat[<%= field_key %>]"
         value="<%= current.to_s %>"
         placeholder="<%= placeholder %>"
         class="<%= base_text %>">
<% end %>
